import * as bitcoin from 'bitcoinjs-lib';
import { EsploraClient } from './esplora';
export declare const PROTOCOL_ID: Buffer;
export declare const MAX_CHUNK_SIZE = 520;
export declare function chunkContent(data: Buffer): Buffer[];
export declare class Inscription {
    tags: Map<number, Buffer>;
    body: Buffer;
    constructor(tags?: Map<number, Buffer>, body?: Buffer);
    getContentType(): string | null;
    getContentEncoding(): string | null;
    setContentType(contentType: string): void;
    setContentEncoding(contentEncoding: string): void;
    private getTags;
    toScript(xOnlyPublicKey: Buffer): (number | Buffer)[];
}
export declare namespace Inscription {
    function createTextInscription(text: string): Inscription;
    function createInscription(contentType: string, content: Buffer): Inscription;
}
export declare function parseInscriptions(tx: bitcoin.Transaction): Inscription[];
export declare function getTxInscriptions(esploraClient: EsploraClient, txid: string): Promise<Inscription[]>;
export declare function getInscriptionFromId(esploraClient: EsploraClient, inscriptionId: string): Promise<Inscription>;
